(function() {
    var type_impls = Object.fromEntries([["revmc",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SparseMap%3CK,+V%3E\" class=\"impl\"><a href=\"#impl-Debug-for-SparseMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/trait.Debug.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::__core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::SparseMap\">SparseMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/trait.EntityRef.html\" title=\"trait revmc::cranelift::cranelift::prelude::EntityRef\">EntityRef</a> + <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/trait.Debug.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::__core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/trait.SparseMapValue.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::SparseMapValue\">SparseMapValue</a>&lt;K&gt; + <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/trait.Debug.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::__core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/struct.Formatter.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::__core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/result/enum.Result.html\" title=\"enum revmc::cranelift::cranelift::prelude::codegen::entity::__core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/struct.Error.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::__core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","revmc::cranelift::cranelift::prelude::codegen::entity::SparseSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-SparseMap%3CK,+V%3E\" class=\"impl\"><a href=\"#impl-Default-for-SparseMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/default/trait.Default.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::__core::default::Default\">Default</a> for <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::SparseMap\">SparseMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/trait.EntityRef.html\" title=\"trait revmc::cranelift::cranelift::prelude::EntityRef\">EntityRef</a>,\n    V: <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/trait.SparseMapValue.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::SparseMapValue\">SparseMapValue</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::SparseMap\">SparseMap</a>&lt;K, V&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","revmc::cranelift::cranelift::prelude::codegen::entity::SparseSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseMap%3CK,+V%3E\" class=\"impl\"><a href=\"#impl-SparseMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::SparseMap\">SparseMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/trait.EntityRef.html\" title=\"trait revmc::cranelift::cranelift::prelude::EntityRef\">EntityRef</a>,\n    V: <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/trait.SparseMapValue.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::SparseMapValue\">SparseMapValue</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::SparseMap\">SparseMap</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new empty mapping.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true is the map contains no elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the mapping.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, key: K) -&gt; <a class=\"enum\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/option/enum.Option.html\" title=\"enum revmc::cranelift::cranelift::prelude::codegen::entity::__core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value corresponding to the key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self, key: K) -&gt; <a class=\"enum\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/option/enum.Option.html\" title=\"enum revmc::cranelift::cranelift::prelude::codegen::entity::__core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the value corresponding to the key.</p>\n<p>Note that the returned value must not be mutated in a way that would change its key. This\nwould invalidate the sparse set data structure.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.contains_key\" class=\"fn\">contains_key</a>(&amp;self, key: K) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if the map contains a value corresponding to <code>key</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: V) -&gt; <a class=\"enum\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/option/enum.Option.html\" title=\"enum revmc::cranelift::cranelift::prelude::codegen::entity::__core::option::Option\">Option</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a value into the map.</p>\n<p>If the map did not have this key present, <code>None</code> is returned.</p>\n<p>If the map did have this key present, the value is updated, and the old value is returned.</p>\n<p>It is not necessary to provide a key since the value knows its own key already.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, key: K) -&gt; <a class=\"enum\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/option/enum.Option.html\" title=\"enum revmc::cranelift::cranelift::prelude::codegen::entity::__core::option::Option\">Option</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Remove a value from the map and return it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/option/enum.Option.html\" title=\"enum revmc::cranelift::cranelift::prelude::codegen::entity::__core::option::Option\">Option</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.values\" class=\"fn\">values</a>(&amp;self) -&gt; <a class=\"struct\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/slice/struct.Iter.html\" title=\"struct revmc::cranelift::cranelift::prelude::codegen::entity::__core::slice::Iter\">Iter</a>&lt;'_, V&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, V&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Get an iterator over the values in the map.</p>\n<p>The iteration order is entirely determined by the preceding sequence of <code>insert</code> and\n<code>remove</code> operations. In particular, if no elements were removed, this is the insertion\norder.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/struct.SparseMap.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[V]</a></h4></section></summary><div class=\"docblock\"><p>Get the values as a slice.</p>\n</div></details></div></details>",0,"revmc::cranelift::cranelift::prelude::codegen::entity::SparseSet"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[13588]}