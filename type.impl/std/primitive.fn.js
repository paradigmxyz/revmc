(function() {
    var type_impls = Object.fromEntries([["revmc",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEvmCompilerFn%3E-for-unsafe+extern+%22C%22+fn(*mut+Gas,+*mut+EvmStack,+*mut+usize,+*const+Env,+*const+Contract,+*mut+EvmContext%3C'a%3E)+-%3E+InstructionResult\" class=\"impl\"><a class=\"src rightside\" href=\"src/revmc_context/lib.rs.html#211\">Source</a><a href=\"#impl-From%3CEvmCompilerFn%3E-for-unsafe+extern+%22C%22+fn(*mut+Gas,+*mut+EvmStack,+*mut+usize,+*const+Env,+*const+Contract,+*mut+EvmContext%3C'a%3E)+-%3E+InstructionResult\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/convert/trait.From.html\" title=\"trait revmc::cranelift::cranelift::prelude::codegen::entity::__core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"revmc/struct.EvmCompilerFn.html\" title=\"struct revmc::EvmCompilerFn\">EvmCompilerFn</a>&gt; for unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>Gas, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"revmc/struct.EvmStack.html\" title=\"struct revmc::EvmStack\">EvmStack</a>, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Env, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Contract, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"revmc/struct.EvmContext.html\" title=\"struct revmc::EvmContext\">EvmContext</a>&lt;'_&gt;) -&gt; InstructionResult</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/revmc_context/lib.rs.html#213\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"revmc/cranelift/cranelift/prelude/codegen/entity/__core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    f: <a class=\"struct\" href=\"revmc/struct.EvmCompilerFn.html\" title=\"struct revmc::EvmCompilerFn\">EvmCompilerFn</a>,\n) -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>Gas, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"revmc/struct.EvmStack.html\" title=\"struct revmc::EvmStack\">EvmStack</a>, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Env, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Contract, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"revmc/struct.EvmContext.html\" title=\"struct revmc::EvmContext\">EvmContext</a>&lt;'_&gt;) -&gt; InstructionResult</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EvmCompilerFn>","revmc::RawEvmCompilerFn"]]],["revmc_context",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3935,21]}